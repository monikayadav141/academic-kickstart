for (i in 1:n_sims){
est <- estimators(100, 5)
n_reg[i] <- est[1]
n_diff_mean[i] <- est[2]
}
mean_diff <- mean(n_diff_mean)
cat(paste("Mean of estimates using difference in means:", round(mean_diff, 4), "\n"))
mean_reg <- mean(n_reg)
cat(paste("Mean of estimates using linear regression:", round(mean_reg, 4)))
plotting_data <- data.frame(n_reg, n_diff_mean)
x = plotting_data %>%
gather(n_reg, n_diff_mean, key = "var", value = "value")
ggplot(x)+
geom_histogram(aes(x = value, fill = var), alpha = 0.4, binwidth = 0.05, position =    "identity") +
scale_fill_manual(values = c("blue", "red"), labels = c("Diff in Means", "Linear Regression"),    name = "Estimator") +
geom_vline(xintercept=mean_reg, color="blue") +
geom_vline(xintercept=mean_diff, color="red") + labs(x = "SATE Estimates") + ggtitle("Sampling  Distribution") +
theme_classic()
#Sampling distribution
set.seed(1234)
# Linear regression and Difference in Means
estimators <- function(N, tau) {
pretest <- rnorm(N, 65, 3)
y0 <- 10 + 1.1* pretest + rnorm(N, 0, 1)
y1 <- 10 + 1.1* pretest + tau + rnorm(N, 0, 1)
z <- rbinom(n=N, 1, p=.5)
y <- ifelse(z==1, y1, y0)
obs_data <- data.frame(pretest=pretest, y = y, z = z)
fit <- lm(y ~ z + pretest, data = obs_data)
reg <- coef(fit)[2]
diff_mean <- mean(y[z==1]) - mean(y[z==0])
return(c(reg, diff_mean))
}
n_sims <-  10000
n_reg <-  as.numeric(rep(NA, n_sims))
n_diff_mean <- as.numeric(rep(NA, n_sims))
for (i in 1:n_sims){
est <- estimators(100, 5)
n_reg[i] <- est[1]
n_diff_mean[i] <- est[2]
}
mean_diff <- mean(n_diff_mean)
cat(paste("Mean of estimates using difference in means:", round(mean_diff, 4), "\n"))
mean_reg <- mean(n_reg)
cat(paste("Mean of estimates using linear regression:", round(mean_reg, 4)))
rm(list=ls())
set.seed(1234)
# Linear regression and Difference in Means
estimators <- function(N, tau) {
pretest <- rnorm(N, 65, 3)
y0 <- 10 + 1.1* pretest + rnorm(N, 0, 1)
y1 <- 10 + 1.1* pretest + tau + rnorm(N, 0, 1)
z <- rbinom(n=N, 1, p=.5)
y <- ifelse(z==1, y1, y0)
obs_data <- data.frame(pretest=pretest, y = y, z = z)
fit <- lm(y ~ z + pretest, data = obs_data)
reg <- coef(fit)[2]
diff_mean <- mean(y[z==1]) - mean(y[z==0])
return(c(reg, diff_mean))
}
n_sims <-  10000
n_reg <-  as.numeric(rep(NA, n_sims))
n_diff_mean <- as.numeric(rep(NA, n_sims))
for (i in 1:n_sims){
est <- estimators(100, 5)
n_reg[i] <- est[1]
n_diff_mean[i] <- est[2]
}
rm(list=ls())
#Sampling distribution
set.seed(1234)
# Linear regression and Difference in Means
estimators <- function(N, tau) {
pretest <- rnorm(N, 65, 3)
y0 <- 10 + 1.1* pretest + rnorm(N, 0, 1)
y1 <- 10 + 1.1* pretest + tau + rnorm(N, 0, 1)
z <- rbinom(n=N, 1, p=.5)
y <- ifelse(z==1, y1, y0)
obs_data <- data.frame(pretest=pretest, y = y, z = z)
fit <- lm(y ~ z + pretest, data = obs_data)
reg <- coef(fit)[2]
diff_mean <- mean(y[z==1]) - mean(y[z==0])
return(c(reg, diff_mean))
}
n_sims <-  10000
n_reg <-  as.numeric(rep(NA, n_sims))
n_diff_mean <- as.numeric(rep(NA, n_sims))
for (i in 1:n_sims){
est <- estimators(100, 5)
n_reg[i] <- est[1]
n_diff_mean[i] <- est[2]
}
mean_diff <- mean(n_diff_mean)
cat(paste("Mean of estimates using difference in means:", round(mean_diff, 4), "\n"))
mean_reg <- mean(n_reg)
cat(paste("Mean of estimates using linear regression:", round(mean_reg, 4)))
#Sampling distribution
set.seed(1234)
# Linear regression and Difference in Means
estimators <- function(N, tau) {
pretest <- rnorm(N, 65, 3)
y0 <- 10 + 1.1* pretest + rnorm(N, 0, 1)
y1 <- 10 + 1.1* pretest + tau + rnorm(N, 0, 1)
z <- rbinom(n=N, 1, p=.5)
y <- ifelse(z==1, y1, y0)
obs_data <- data.frame(pretest=pretest, y = y, z = z)
fit <- lm(y ~ z + pretest, data = obs_data)
reg <- coef(fit)[2]
diff_mean <- mean(y[z==1]) - mean(y[z==0])
return(c(reg, diff_mean))
}
n_sims <-  10000
n_reg <-  as.numeric(rep(NA, n_sims))
n_diff_mean <- as.numeric(rep(NA, n_sims))
for (i in 1:n_sims){
est <- estimators(100, 5)
n_reg[i] <- est[1]
n_diff_mean[i] <- est[2]
}
mean_diff <- mean(n_diff_mean)
cat(paste("Mean of estimates using difference in means:", round(mean_diff, 4), "\n"))
mean_reg <- mean(n_reg)
cat(paste("Mean of estimates using linear regression:", round(mean_reg, 4)))
plotting_data <- data.frame(n_reg, n_diff_mean)
x = plotting_data %>%
gather(n_reg, n_diff_mean, key = "var", value = "value")
ggplot(x)+
geom_histogram(aes(x = value, fill = var), alpha = 0.4, binwidth = 0.05, position =    "identity") +
scale_fill_manual(values = c("blue", "red"), labels = c("Diff in Means", "Linear Regression"),    name = "Estimator") +
geom_vline(xintercept=SATE, color="black") +
geom_vline(xintercept=mean_reg, color="blue") +
geom_vline(xintercept=mean_diff, color="red") + labs(x = "SATE Estimates") + ggtitle("Sampling  Distribution") +
theme_classic()
PATE <- 5
#Sampling distribution
set.seed(1234)
# Linear regression and Difference in Means
estimators <- function(N, tau) {
pretest <- rnorm(N, 65, 3)
y0 <- 10 + 1.1* pretest + rnorm(N, 0, 1)
y1 <- 10 + 1.1* pretest + tau + rnorm(N, 0, 1)
z <- rbinom(n=N, 1, p=.5)
y <- ifelse(z==1, y1, y0)
obs_data <- data.frame(pretest=pretest, y = y, z = z)
fit <- lm(y ~ z + pretest, data = obs_data)
reg <- coef(fit)[2]
diff_mean <- mean(y[z==1]) - mean(y[z==0])
return(c(reg, diff_mean))
}
n_sims <-  10000
n_reg <-  as.numeric(rep(NA, n_sims))
n_diff_mean <- as.numeric(rep(NA, n_sims))
for (i in 1:n_sims){
est <- estimators(100, 5)
n_reg[i] <- est[1]
n_diff_mean[i] <- est[2]
}
mean_diff <- mean(n_diff_mean)
cat(paste("Mean of estimates using difference in means:", round(mean_diff, 4), "\n"))
mean_reg <- mean(n_reg)
cat(paste("Mean of estimates using linear regression:", round(mean_reg, 4)))
plotting_data <- data.frame(n_reg, n_diff_mean)
x = plotting_data %>%
gather(n_reg, n_diff_mean, key = "var", value = "value")
ggplot(x)+
geom_histogram(aes(x = value, fill = var), alpha = 0.4, binwidth = 0.05, position =    "identity") +
scale_fill_manual(values = c("blue", "red"), labels = c("Diff in Means", "Linear Regression"), name = "Estimator") +
geom_vline(xintercept = PATE, color ="black") +
geom_vline(xintercept = mean_reg, color = "blue") +
geom_vline(xintercept = mean_diff, color = "red") + labs(x = "SATE Estimates") + ggtitle("Sampling  Distribution") +
theme_classic()
bias_diff_mean <- PATE - mean_diff
cat(paste("Bias of diff of means estimator:", round(bias_diff_mean, 5), "\n"))
bias_reg <- PATE - mean_reg
cat(paste("Bias of linear regression estimator:", round(bias_reg, 5), "\n"))
eff_diff_mean <- var(n_diff_mean)
cat(paste("Efficiency of diff of means estimator:", round(eff_diff_mean, 3), "\n"))
eff_reg <- var(n_reg)
cat(paste("Efficiency of linear regression estimator:", round(eff_reg, 3)))
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
library(tidyverse)
library(ggplot2)
rm(list=ls())
dgp <- function(N,coef,seed){
set.seed(seed)
#Create pre-treatment test scores for everyone
pretest <- rnorm(n=N,65,3)
tau <- 5
#Create potential outcome where tau = 5
y0 <- 10 + coef * pretest  + rnorm(n = N, mean = 0, sd = 1)
y1 <- 10 + coef * pretest + tau + rnorm(n = N, mean = 0, sd = 1)
dat<-data.frame(pretest=pretest,y0=y0,y1=y1)
return(dat)
}
data <- dgp(100,1.1,1234)
#Defining pretreatment covariates and potential outcomes first
N <- 100
set.seed(1234)
pretest <- rnorm(N, 65, 3)
tau <- 5
y0 <- 10 + 1.1* pretest + rnorm(N, 0, 1)  # Ask if y1 should be y0 + tau
y1 <- 10 + 1.1* pretest + tau + rnorm(N, 0, 1)
SATE <- mean(y1) - mean(y0)
cat(paste("SATE is:", round(SATE, 4), "\n"))
# Linear regression and Difference in Means
estimators <- function() {
z <- rbinom(n=N, 1, p=.5)
y <- ifelse(z==1, y1, y0)
obs_data <- data.frame(pretest=pretest, y = y, z = z)
fit <- lm(y ~ z + pretest, data = obs_data)
reg <- coef(fit)[2]
diff_mean <- mean(y[z==1]) - mean(y[z==0])
return(c(reg, diff_mean))
}
n_sims <-  10000
n_reg <-  as.numeric(rep(NA, n_sims))
n_diff_mean <- as.numeric(rep(NA, n_sims))
for (i in 1:n_sims){
est <- estimators()
n_reg[i] <- est[1]
n_diff_mean[i] <- est[2]
}
mean_diff <- mean(n_diff_mean)
cat(paste("Mean of estimates using difference in means:", round(mean_diff, 4), "\n"))
mean_reg <- mean(n_reg)
cat(paste("Mean of estimates using linear regression:", round(mean_reg, 4)))
plotting_data <- data.frame(n_reg, n_diff_mean)
x = plotting_data %>%
gather(n_reg, n_diff_mean, key = "var", value = "value")
ggplot(x)+
geom_histogram(aes(x = value, fill = var), alpha = 0.4, binwidth = 0.05, position =    "identity") +
scale_fill_manual(values = c("blue", "red"), labels = c("Diff in Means", "Linear Regression"),    name = "Estimator") +
geom_vline(xintercept= SATE, color="black") +
geom_vline(xintercept=mean_reg, color="blue", linetype = "solid") +
geom_vline(xintercept=mean_diff, color="red") + labs(x = "SATE Estimates") +            ggtitle("Randomization Distribution") +
theme_classic()
bias_diff_mean <- SATE - mean_diff
cat(paste("Bias of diff of means estimator:", round(bias_diff_mean, 5), "\n"))
bias_reg <- SATE - mean_reg
cat(paste("Bias of linear regression estimator:", round(bias_reg, 5), "\n"))
eff_diff_mean <- var(n_diff_mean)
cat(paste("Variance of diff of means estimator:", round(eff_diff_mean, 3), "\n"))
eff_reg <- var(n_reg)
cat(paste("Variance of linear regression estimator:", round(eff_reg, 3)))
set.seed(1234)
#Using a very small coefficieent for pretest
y0 <- 10 + 0* pretest + rnorm(N, 0, 1)
y1 <- 10 + 0* pretest + tau + rnorm(n = N, 0, 1)
SATE <- mean(y1) - mean(y0)
cat(paste("SATE is:", round(SATE, 4), "\n"))
# Linear regression and Difference in Means Estimator
estimators <- function() {
z <- rbinom(n=N, 1, p=.5)
y <- ifelse(z==1, y1, y0)
obs_data <- data.frame(pretest=pretest, y = y, z = z)
fit <- lm(y ~ z + pretest, data = obs_data)
reg <- coef(fit)[2]
diff_mean <- mean(y[z==1]) - mean(y[z==0])
return(c(reg, diff_mean))
}
n_sims <-  10000 #Number of draws
n_reg <-  as.numeric(rep(NA, n_sims))
n_diff_mean <- as.numeric(rep(NA, n_sims))
for (i in 1:n_sims){
est <- estimators()
n_reg[i] <- est[1]
n_diff_mean[i] <- est[2]
}
#New mean of estimates using both methods
mean_diff <- mean(n_diff_mean)
cat(paste("Mean of estimates using difference in means:", round(mean_diff, 4), "\n"))
mean_reg <- mean(n_reg)
cat(paste("Mean of estimates using linear regression:", round(mean_reg , 4), "\n"))
#calculating new bias and efficiency
bias_diff_mean <- SATE - mean_diff
cat(paste("Bias of diff of means estimator:", round(bias_diff_mean, 4), "\n"))
bias_reg <- SATE - mean_reg
cat(paste("Bias of linear regression estimator:", round(bias_reg, 4), "\n"))
eff_diff_mean <- var(n_diff_mean)
cat(paste("Variance of diff of means estimator:", round(eff_diff_mean, 4), "\n"))
eff_reg <- var(n_reg)
cat(paste("Variance of linear regression estimator:", round(eff_reg, 4)))
n <- 100
set.seed(1234)
# Female as blocking variable
female <- rbinom(n, 1, p = 0.3)
#treatment effect
tau <- ifelse(female==1, 7, 3)
y0 <- 70 + rnorm(n, 0, 1)
y1 <- 70 + tau + rnorm(n, 0, 1)
block <- data.frame(female, y0, y1)
# Overall SATE
SATE <- mean(y1) - mean(y0)
SATE
# SATE where female = 1
mean(y1[female==1] - y0[female==1])
# SATE where female = 0
mean(y1[female==0] - y0[female==0])
#Assigning Probabilities
set.seed(1234)
probability <- ifelse(female==1, 0.4, 0.6)
estimators <- function() {
z <- rbinom(n, 1, p = probability)
y <- ifelse(z==1, y1, y0)
obs_data <- data.frame(female, y = y, z = z)
fit <- lm(y ~ z + female, data = obs_data)
reg <- coef(fit)[2]
diff_mean <- mean(y[z==1]) - mean(y[z==0])
return(c(reg, diff_mean))
}
n_sims <-  10000 #Number of draws
n_reg <-  as.numeric(rep(NA, n_sims))
n_diff_mean <- as.numeric(rep(NA, n_sims))
for (i in 1:n_sims){
est <- estimators()
n_reg[i] <- est[1]
n_diff_mean[i] <- est[2]
}
#Mean of estimates using both methods
mean_diff <- mean(n_diff_mean)
cat(paste("Mean of estimates using difference in means:", round(mean_diff, 6), "\n"))
mean_reg <- mean(n_reg)
cat(paste("Mean of estimates using linear regression:", round(mean_reg , 6), "\n"))
plotting_data <- data.frame(n_reg, n_diff_mean)
x = plotting_data %>%
gather(n_reg, n_diff_mean, key = "var", value = "value")
ggplot(x)+
geom_histogram(aes(x = value, fill = var), alpha = 0.4, binwidth = 0.05, position =    "identity") +
scale_fill_manual(values = c("blue", "red"), labels = c("Diff in Means", "Linear Regression"),    name = "Estimator") +
geom_vline(xintercept= SATE, color="black") +
geom_vline(xintercept=mean_reg, color="red", linetype = "solid") +
geom_vline(xintercept=mean_diff, color="blue") + labs(x = "SATE Estimates") + ggtitle("Randomization Distribution") +
theme_classic()
#calculating new bias and efficiency
bias_diff_mean <- SATE - mean_diff
cat(paste("Bias of diff of means estimator:", round(bias_diff_mean, 5), "\n"))
bias_reg <- SATE - mean_reg
cat(paste("Bias of linear regression estimator:", round(bias_reg, 5), "\n"))
eff_diff_mean <- var(n_diff_mean)
cat(paste("Variance of diff of means estimator:", round(eff_diff_mean, 3), "\n"))
eff_reg <- var(n_reg)
cat(paste("Variance of linear regression estimator:", round(eff_reg, 3), "\n"))
#Calculate RMSE
n_sims <-  10000 #Number of draws
n_rmse <-  as.numeric(rep(NA, n_sims))
for (i in 1:n_sims){
n_rmse[i] <- sum((SATE - n_reg[i])^2)
n_rmse[i]
}
rmse <- sqrt(n_rmse[i])
cat(paste("RMSE is:", round(rmse, 3)))
w <- sum((SATE - n_reg)^2)
w
w <- sum((SATE - mean(n_reg))^2)
w
w <- sqrt(sum((SATE - mean_reg)^2))
w
for (i in 1:n_sims){
n_rmse[i] <- sum((SATE - n_reg[i])^2)
n_rmse[i]
}
rmse <- sqrt(n_rmse[i])
for (i in 1:n_sims){
n_rmse[i] <- sum((SATE - n_reg[i])^2)
n_rmse[i]
}
rmse <- sqrt(n_rmse[i])
cat(paste("RMSE is:", round(rmse, 3)))
w <- sqrt(sum((SATE - mean_reg)^2))
w
n_sims <-  10000 #Number of draws
n_rmse <-  as.numeric(rep(NA, n_sims))
for (i in 1:n_sims){
n_rmse[i] <- sum((SATE - n_reg[i])^2)
n_rmse[i]
}
rmse <- sqrt(n_rmse[i])
cat(paste("RMSE is:", round(rmse, 3)))
w <- sqrt((SATE - mean_reg)^2)
w
n <- 100
set.seed(1234)
# Female as blocking variable
female <- rbinom(n, 1, p = 0.3)
#treatment effect
tau <- ifelse(female==1, 7, 3)
y0 <- 70 + rnorm(n, 0, 1)
y1 <- 70 + tau + rnorm(n, 0, 1)
probability <- ifelse(female==1, 0.4, 0.6)
z <- rbinom(n, 1, p = probability)
y <- ifelse(z==1, y1, y0)
obs_data <- data.frame(female, y = y, z = z)
fit <- lm(y ~ z + female + z:female, data = obs_data)
summary(fit, digits = 2)
PATE <- 5
#Sampling distribution
set.seed(1234)
# Linear regression and Difference in Means
estimators <- function(N, tau) {
pretest <- rnorm(N, 65, 3)
y0 <- 10 + 1.1* pretest + rnorm(N, 0, 1)
y1 <- 10 + 1.1* pretest + tau + rnorm(N, 0, 1)
z <- rbinom(n=N, 1, p=.5)
y <- ifelse(z==1, y1, y0)
obs_data <- data.frame(pretest=pretest, y = y, z = z)
fit <- lm(y ~ z + pretest, data = obs_data)
reg <- coef(fit)[2]
diff_mean <- mean(y[z==1]) - mean(y[z==0])
return(c(reg, diff_mean))
}
n_sims <-  10000
n_reg <-  as.numeric(rep(NA, n_sims))
n_diff_mean <- as.numeric(rep(NA, n_sims))
for (i in 1:n_sims){
est <- estimators(100, 5)
n_reg[i] <- est[1]
n_diff_mean[i] <- est[2]
}
mean_diff <- mean(n_diff_mean)
cat(paste("Mean of estimates using difference in means:", round(mean_diff, 4), "\n"))
mean_reg <- mean(n_reg)
cat(paste("Mean of estimates using linear regression:", round(mean_reg, 4)))
View(obs_data)
obs_data$male <- ifelse(female == 1, male = 0, male = 1)
obs_data$male <- ifelse(female == 1, 0, 1)
View(obs_data)
fit <- lm(y ~ z + female + z:female, data = obs_data)
summary(fit, digits = 2)
fit1 <- lm(y ~ z + male + z:male, data = obs_data)
summary(fit1, digits = 2)
fit2 <- lm(y ~ z + z:male + z:female, data = obs_data)
summary(fit2, digits = 2)
fit <- lm(y ~ z + female + z:female, data = obs_data)
summary(fit, digits = 2)
fit1 <- lm(y ~ z + male + z:male, data = obs_data)
summary(fit1, digits = 2)
fit2 <- lm(y ~ z:male + z:female, data = obs_data)
summary(fit2, digits = 2)
n <- 100
set.seed(1234)
# Female as blocking variable
female <- rbinom(n, 1, p = 0.3)
#treatment effect
tau <- ifelse(female==1, 7, 3)
y0 <- 70 + rnorm(n, 0, 1)
y1 <- 70 + tau + rnorm(n, 0, 1)
probability <- ifelse(female==1, 0.4, 0.6)
z <- rbinom(n, 1, p = probability)
y <- ifelse(z==1, y1, y0)
obs_data <- data.frame(female, y = y, z = z)
obs_data$male <- ifelse(female == 1, 0, 1)
fit <- lm(y ~ z:male + z:female, data = obs_data)
summary(fit, digits = 2)
plotting_data <- data.frame(n_reg, n_diff_mean)
x = plotting_data %>%
gather(n_reg, n_diff_mean, key = "var", value = "value")
ggplot(x)+
geom_histogram(aes(x = value, fill = var), alpha = 0.4, binwidth = 0.05, position =    "identity") +
scale_fill_manual(values = c("blue", "red"), labels = c("Diff in Means", "Linear Regression"), name = "Estimator") +
geom_vline(xintercept = PATE, color ="black") +
geom_vline(xintercept = mean_reg, color = "blue") +
geom_vline(xintercept = mean_diff, color = "red") + labs(x = "Estimates") + ggtitle("Sampling  Distribution") +
theme_classic()
fit <- lm(y ~ z:male + z:female, data = obs_data)
summary(fit, digits = 2)
fit1 <- lm(y ~ z + female, data = obs_data)
summary(fit1, digits = 2)
fit <- lm(y ~ z:male + z:female, data = obs_data)
summary(fit, digits = 2)
fit1 <- lm(y ~ z + female, data = obs_data)
summary(fit1, digits = 2)
fit2 <- lm(y ~ z + female, data = obs_data)
summary(fit2, digits = 2)
fit <- lm(y ~ z:male + z:female, data = obs_data)
summary(fit, digits = 2)
fit1 <- lm(y ~ z + female, data = obs_data)
summary(fit1, digits = 2)
fit2 <- lm(y ~ z + male, data = obs_data)
summary(fit2, digits = 2)
fit <- lm(y ~ z:male + z:female, data = obs_data)
summary(fit, digits = 2)
fit1 <- lm(y ~ z + female, data = obs_data)
summary(fit1, digits = 2)
fit2 <- lm(y ~ z + male + z:male, data = obs_data)
summary(fit2, digits = 2)
fit <- lm(y ~ z:male + z:female, data = obs_data)
summary(fit, digits = 2)
fit1 <- lm(y ~ z + female, data = obs_data)
summary(fit1, digits = 2)
fit3 <- lm(y ~ z + male, data = obs_data)
summary(fit3, digits = 2)
fit2 <- lm(y ~ z + male + z:male, data = obs_data)
summary(fit2, digits = 2)
fit <- lm(y ~ z:male + z:female, data = obs_data)
summary(fit, digits = 2)
fit2 <- lm(y ~ z + male + z:male, data = obs_data)
summary(fit2, digits = 2)
fit <- lm(y ~ z:male + z:female, data = obs_data)
summary(fit, digits = 2)
fit2 <- lm(y ~ z + female + z:female, data = obs_data)
summary(fit2, digits = 2)
fit <- lm(y ~ z:male + z:female, data = obs_data)
summary(fit, digits = 2)
fit2 <- lm(y ~ z + female + z:female, data = obs_data)
summary(fit2, digits = 2)
fit3 <- lm(y ~ z + male + z:male, data = obs_data)
summary(fit3, digits = 2)
~/Desktop/Research Projects/Academic_website/academic-kickstart
setwd("~/Desktop/Research Projects/Academic_website/academic-kickstart")
blogdown:::serve_site()
hugo new project/fake-news.md
blogdown:::serve_site()
